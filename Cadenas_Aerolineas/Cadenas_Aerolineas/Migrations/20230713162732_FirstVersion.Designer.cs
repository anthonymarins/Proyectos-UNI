// <auto-generated />
using Cadenas_Aerolineas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cadenas_Aerolineas.Migrations
{
    [DbContext(typeof(AerolineaContext))]
    [Migration("20230713162732_FirstVersion")]
    partial class FirstVersion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cadenas_Aerolineas.Models.Paises", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Paises");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Nicaragua"
                        });
                });

            modelBuilder.Entity("Cadenas_Aerolineas.Models.Pasajeros", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AMaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("APaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IdPais");

                    b.ToTable("Peliculas");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AMaterno = "Castellon",
                            APaterno = "Carrion",
                            Email = "axel.carrion60u.com",
                            IdPais = 1,
                            Name = "Axel",
                            Telefono = 88445577
                        },
                        new
                        {
                            ID = 2,
                            AMaterno = "Castellon",
                            APaterno = "Carrion",
                            Email = "angel.carrion60u.com",
                            IdPais = 1,
                            Name = "Angel",
                            Telefono = 77215056
                        });
                });

            modelBuilder.Entity("Cadenas_Aerolineas.Models.Pasajeros", b =>
                {
                    b.HasOne("Cadenas_Aerolineas.Models.Paises", "IdPaises")
                        .WithMany()
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdPaises");
                });
#pragma warning restore 612, 618
        }
    }
}
